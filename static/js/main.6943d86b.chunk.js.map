{"version":3,"sources":["components/Pricing.js","App.js","reportWebVitals.js","index.js"],"names":["Pricing","props","selectorRef","useRef","progressRef","useState","sliderValue","setSliderValue","monthlyPrice","setMonthlyPrice","monthly","setMonthly","className","id","type","min","max","value","onChange","e","target","current","style","left","width","ref","xmlns","height","fill","fillRule","d","toFixed","checked","windowWidth","App","window","innerWidth","setWindowWidth","useEffect","resizeWidth","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SA0FeA,EAvFC,SAACC,GACf,IAAMC,EAAcC,iBAAO,MACrBC,EAAcD,iBAAO,MAC3B,EAAsCE,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwCF,mBAASC,EAAc,OAA/D,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAQA,OACE,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,YAAf,UACE,oBAAGC,GAAG,WAAN,UAAgC,EAAdP,EAAlB,iBAEA,sBAAKM,UAAU,QAAf,UACE,uBACEC,GAAG,SACHC,KAAK,QACLC,IAAI,IACJC,IAAI,MACJC,MAAOX,EACPY,SAlBgB,SAACC,GACzBZ,EAAeY,EAAEC,OAAOH,OACxBR,EAAgBU,EAAEC,OAAOH,MAAQ,OACjCf,EAAYmB,QAAQC,MAAMC,KAAOJ,EAAEC,OAAOH,MAAQ,IAClDb,EAAYiB,QAAQC,MAAME,MAAQL,EAAEC,OAAOH,MAAQ,OAgB7C,qBAAKJ,GAAG,WAAWY,IAAKvB,EAAxB,SACE,qBACEU,UAAU,aACVc,MAAM,6BACNF,MAAM,KACNG,OAAO,KAJT,SAME,mBAAGC,KAAK,UAAUC,SAAS,UAA3B,SACE,sBAAMC,EAAE,8LAId,qBAAKjB,GAAG,eAAeY,IAAKrB,OAE7BM,EACC,oBAAGG,GAAG,QAAN,UACE,qCAAQL,EAAauB,QAAQ,GAA7B,OADF,aAIA,oBAAGlB,GAAG,QAAN,UACE,sCACoB,GAAfL,EAAmC,GAAfA,EAAoB,KAAMuB,QAAQ,GAAI,OAFjE,eAQJ,sBAAKnB,UAAU,UAAf,UACE,gDACA,wBAAOA,UAAU,SAAjB,UACE,uBACEE,KAAK,WACLkB,SAAUtB,EACVQ,SAAU,kBAAMP,GAAYD,MAE9B,qBAAKE,UAAU,cAEjB,+CAEE,uBAAMC,GAAG,WAAT,UACG,IADH,OAEOZ,EAAMgC,YAAc,KAAO,oBAItC,uBACA,sBAAKrB,UAAU,QAAf,UACE,qBAAKA,UAAU,WAAf,SACE,+BACE,oDACA,qDACA,oDAGJ,wBAAQA,UAAU,YAAlB,mCC1DOsB,EAtBH,WACV,MAAsC7B,mBAAS8B,OAAOC,YAAtD,mBAAOH,EAAP,KAAoBI,EAApB,KASA,OAPAC,qBAAU,WACR,IAAMC,EAAc,WAClBF,EAAeF,OAAOC,aAGxB,OADAD,OAAOK,iBAAiB,SAAUD,GAC3B,kBAAMJ,OAAOM,oBAAoB,SAAUF,OAGlD,uBAAM3B,UAAU,MAAhB,UACE,gEACA,+DACgCqB,EAAc,KAAO,uBADrD,+BAIA,cAAC,EAAD,CAASA,YAAaA,QCTbS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6943d86b.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport \"./Pricing.css\";\n\nconst Pricing = (props) => {\n  const selectorRef = useRef(null);\n  const progressRef = useRef(null);\n  const [sliderValue, setSliderValue] = useState(50);\n  const [monthlyPrice, setMonthlyPrice] = useState(sliderValue / 3.125);\n  const [monthly, setMonthly] = useState(false);\n\n  const changeSliderValue = (e) => {\n    setSliderValue(e.target.value);\n    setMonthlyPrice(e.target.value / 3.125);\n    selectorRef.current.style.left = e.target.value + \"%\";\n    progressRef.current.style.width = e.target.value + \"%\";\n  };\n  return (\n    <div className=\"Pricing\">\n      <div className=\"price-req\">\n        <p id=\"pageview\">{sliderValue * 2}K Pageviews</p>\n\n        <div className=\"slide\">\n          <input\n            id=\"slider\"\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            value={sliderValue}\n            onChange={changeSliderValue}\n          />\n          <div id=\"selector\" ref={selectorRef}>\n            <svg\n              className=\"select-btn\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"22\"\n              height=\"13\"\n            >\n              <g fill=\"#80FFF3\" fillRule=\"evenodd\">\n                <path d=\"M16 2.558v7.884a1 1 0 001.735.679l3.639-3.943a1 1 0 000-1.356l-3.64-3.943A1 1 0 0016 2.558zM6 2.558v7.884a1 1 0 01-1.735.679L.626 7.178a1 1 0 010-1.356l3.64-3.943A1 1 0 016 2.558z\" />\n              </g>\n            </svg>\n          </div>\n          <div id=\"progress-bar\" ref={progressRef}></div>\n        </div>\n        {monthly ? (\n          <p id=\"price\">\n            <span>${monthlyPrice.toFixed(2)} </span>/ month\n          </p>\n        ) : (\n          <p id=\"price\">\n            <span>\n              ${(monthlyPrice * 12 - monthlyPrice * 12 * 0.25).toFixed(2)}{\" \"}\n            </span>\n            / year\n          </p>\n        )}\n      </div>\n      <div className=\"billing\">\n        <p>Monthly Billing</p>\n        <label className=\"switch\">\n          <input\n            type=\"checkbox\"\n            checked={!monthly}\n            onChange={() => setMonthly(!monthly)}\n          ></input>\n          <div className=\"toggle\"></div>\n        </label>\n        <p>\n          Yearly Billing\n          <span id=\"discount\">\n            {\" \"}\n            25% {props.windowWidth > 540 && \"discount\"}\n          </span>\n        </p>\n      </div>\n      <hr></hr>\n      <div className=\"trial\">\n        <div className=\"benefits\">\n          <ul>\n            <li>Unlimited websites</li>\n            <li>100% data ownership</li>\n            <li>Email reports</li>\n          </ul>\n        </div>\n        <button className=\"trial-btn\">Start my trial</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Pricing;\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Pricing from \"./components/Pricing\";\n\nconst App = () => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const resizeWidth = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener(\"resize\", resizeWidth);\n    return () => window.removeEventListener(\"resize\", resizeWidth);\n  });\n  return (\n    <main className=\"App\">\n      <h1>Simple, traffic-based pricing </h1>\n      <h2>\n        Sign-up for our 30-day trial.{windowWidth < 540 && <br />} No credit\n        card required.\n      </h2>\n      <Pricing windowWidth={windowWidth} />\n    </main>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}